{
  "_args": [
    [
      {
        "raw": "rollup-pluginutils@^2.0.1",
        "scope": null,
        "escapedName": "rollup-pluginutils",
        "name": "rollup-pluginutils",
        "rawSpec": "^2.0.1",
        "spec": ">=2.0.1 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\sonal\\Documents\\roshni\\BE project\\ionic\\myApp\\myApp\\node_modules\\rollup-plugin-commonjs"
    ]
  ],
  "_from": "rollup-pluginutils@^2.0.1",
  "_hasShrinkwrap": false,
  "_id": "rollup-pluginutils@2.3.3",
  "_location": "/rollup-pluginutils",
  "_nodeVersion": "10.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/rollup-pluginutils_2.3.3_1537338757767_0.6680328296239817"
  },
  "_npmUser": {
    "name": "lukastaegert",
    "email": "lukas.taegert@tngtech.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rollup-pluginutils@^2.0.1",
    "scope": null,
    "escapedName": "rollup-pluginutils",
    "name": "rollup-pluginutils",
    "rawSpec": "^2.0.1",
    "spec": ">=2.0.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/rollup-plugin-commonjs"
  ],
  "_resolved": "https://registry.npmjs.org/rollup-pluginutils/-/rollup-pluginutils-2.3.3.tgz",
  "_shasum": "3aad9b1eb3e7fe8262820818840bf091e5ae6794",
  "_shrinkwrap": null,
  "_spec": "rollup-pluginutils@^2.0.1",
  "_where": "C:\\Users\\sonal\\Documents\\roshni\\BE project\\ionic\\myApp\\myApp\\node_modules\\rollup-plugin-commonjs",
  "author": {
    "name": "Rich Harris",
    "email": "richard.a.harris@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/rollup/rollup-pluginutils/issues"
  },
  "dependencies": {
    "estree-walker": "^0.5.2",
    "micromatch": "^2.3.11"
  },
  "description": "Functionality commonly needed by Rollup plugins",
  "devDependencies": {
    "eslint": "^5.6.0",
    "husky": "^0.14.3",
    "lint-staged": "^7.2.2",
    "mocha": "^5.2.0",
    "rollup": "^0.66.0",
    "rollup-plugin-buble": "^0.19.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-2XZwja7b6P5q4RZ5FhyX1+f46xi1Z3qBKigLRZ6VTZjwbN0K1IFGMlwm06Uu0Emcre2Z63l77nq/pzn+KxIEoA==",
    "shasum": "3aad9b1eb3e7fe8262820818840bf091e5ae6794",
    "tarball": "https://registry.npmjs.org/rollup-pluginutils/-/rollup-pluginutils-2.3.3.tgz",
    "fileCount": 12,
    "unpackedSize": 34198,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJboe2GCRA9TVsSAnZWagAAx8kP/3oHD3on7NmwQrANlvIf\nMV4hl/Z9m15GFNCfGLFKGfnJo1PfM1QhR/PDb9cxECtu/eLXcOsTlfaefHPd\n+GjtHFpR4sFSE6XoZSuZKnURwto4ufov8uWNYUuPqqMhWrhQQnhy0yG8ExH2\nhdlp5i1UH5WiN8m22qkLYKymoguiQ9ZLc6t7ALG6np/ZqBVNdIt/rexr2Mj1\nk75rH9Bk0LBsaUsKL31SzcCCjkjYPYgUigB6IV2Ic9aaT28otcphT4YZ/fdf\n63nx7XTOc5bWUEisPZytwWXcfflWYkd+3gfJbxJoDqLjTx+hfhDDzutpx3QJ\n7amfMhwB0SqVgYZPXvTsujVJR8i04B1YJu+rHKu3YzkPcHb2IW7IcbVCFus9\naKT8Yn/Qn75VEGWGQYlANhVgZI3UA6NxYmsaMrsRnLZZaUJIF2Xd6KS2ST+G\nbJAZBErBBZB2unG5uT6PUkn4KavlgX/QWG6af2LvVN8G1s/CR/qUzNIVTnQ6\ngIB+WQPEpfMJlVJFyWxC2M1uk3LM21jhdzXcvwWm7NYiXqHJJK0Q5ru6wJ/Y\nK8Zw/gLOodGO19mEnJnmJe8ZJvOef6/FLk+kagO3gLG/9P7jvkgB2F4fA53n\nB9d4yuj2RhjAbDAQIGbV24lxmHoTluhAyS8jMJrho2N2F5MSxrxD/Xxxm7Bi\n8VLH\r\n=oAf1\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "src",
    "dist",
    "README.md"
  ],
  "gitHead": "fe8b70a981114becb856dfbc0f1099b6a255ce17",
  "homepage": "https://github.com/rollup/rollup-pluginutils#readme",
  "jsnext:main": "dist/pluginutils.es.js",
  "keywords": [
    "rollup",
    "utils"
  ],
  "license": "MIT",
  "main": "dist/pluginutils.cjs.js",
  "maintainers": [
    {
      "name": "guybedford",
      "email": "guybedford@gmail.com"
    },
    {
      "name": "lukastaegert",
      "email": "lukas.taegert@tngtech.com"
    },
    {
      "name": "rich_harris",
      "email": "richard.a.harris@gmail.com"
    }
  ],
  "module": "dist/pluginutils.es.js",
  "name": "rollup-pluginutils",
  "optionalDependencies": {},
  "readme": "# rollup-pluginutils\n\nA set of functions commonly used by Rollup plugins.\n\n\n## Installation\n\n```bash\nnpm install --save rollup-pluginutils\n```\n\n\n## Usage\n\n### addExtension\n\n```js\nimport { addExtension } from 'rollup-pluginutils';\n\nexport default function myPlugin ( options = {} ) {\n  return {\n    resolveId ( code, id ) {\n      // only adds an extension if there isn't one already\n      id = addExtension( id ); // `foo` -> `foo.js`, `foo.js -> foo.js`\n      id = addExtension( id, '.myext' ); // `foo` -> `foo.myext`, `foo.js -> `foo.js`\n    }\n  };\n}\n```\n\n\n### attachScopes\n\nThis function attaches `Scope` objects to the relevant nodes of an AST. Each `Scope` object has a `scope.contains(name)` method that returns `true` if a given name is defined in the current scope or a parent scope.\n\nSee [rollup-plugin-inject](https://github.com/rollup/rollup-plugin-inject) or [rollup-plugin-commonjs](https://github.com/rollup/rollup-plugin-commonjs) for an example of usage.\n\n```js\nimport { attachScopes } from 'rollup-pluginutils';\nimport { parse } from 'acorn';\nimport { walk } from 'estree-walker';\n\nexport default function myPlugin ( options = {} ) {\n  return {\n    transform ( code ) {\n      const ast = parse( ast, {\n        ecmaVersion: 6,\n        sourceType: 'module'\n      });\n\n      let scope = attachScopes( ast, 'scope' );\n\n      walk( ast, {\n        enter ( node ) {\n          if ( node.scope ) scope = node.scope;\n\n          if ( !scope.contains( 'foo' ) ) {\n            // `foo` is not defined, so if we encounter it,\n            // we assume it's a global\n          }\n        },\n        leave ( node ) {\n          if ( node.scope ) scope = scope.parent;\n        }\n      });\n    }\n  };\n}\n```\n\n\n### createFilter\n\n```js\nimport { createFilter } from 'rollup-pluginutils';\n\nexport default function myPlugin ( options = {} ) {\n  // `options.include` and `options.exclude` can each be a minimatch\n  // pattern, or an array of minimatch patterns, relative to process.cwd()\n  var filter = createFilter( options.include, options.exclude );\n\n  return {\n    transform ( code, id ) {\n      // if `options.include` is omitted or has zero length, filter\n      // will return `true` by default. Otherwise, an ID must match\n      // one or more of the minimatch patterns, and must not match\n      // any of the `options.exclude` patterns.\n      if ( !filter( id ) ) return;\n\n      // proceed with the transformation...\n    }\n  };\n}\n```\n\n\n### makeLegalIdentifier\n\n```js\nimport { makeLegalIdentifier } from 'rollup-pluginutils';\n\nmakeLegalIdentifier( 'foo-bar' ); // 'foo_bar'\nmakeLegalIdentifier( 'typeof' ); // '_typeof'\n```\n\n### dataToEsm\n\nHelper for treeshakable data imports\n\n```js\nimport { dataToEsm } from 'rollup-pluginutils';\n\nconst esModuleSource = dataToEsm({\n  custom: 'data',\n  to: ['treeshake']\n}, options = {\n  compact: false,\n  indent: '\\t',\n  preferConst: false,\n  objectShorthand: false,\n  namedExports: true\n});\n/*\nOutputs the string ES module source:\n  export const custom = 'data';\n  export const to = ['treeshake'];\n  export default { custom, to };\n*/\n```\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rollup/rollup-pluginutils.git"
  },
  "scripts": {
    "build": "rollup -c",
    "lint": "eslint --fix src test",
    "postcommit": "git reset",
    "precommit": "lint-staged",
    "prepare": "npm run build",
    "prepublishOnly": "npm test",
    "pretest": "npm run build",
    "test": "mocha"
  },
  "version": "2.3.3"
}
