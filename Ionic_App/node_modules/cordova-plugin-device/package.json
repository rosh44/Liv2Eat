{
  "_args": [
    [
      {
        "raw": "cordova-plugin-device@2.0.2",
        "scope": null,
        "escapedName": "cordova-plugin-device",
        "name": "cordova-plugin-device",
        "rawSpec": "2.0.2",
        "spec": "2.0.2",
        "type": "version"
      },
      "C:\\Users\\sonal\\Documents\\roshni\\BE project\\ionic\\myApp\\myApp"
    ]
  ],
  "_from": "cordova-plugin-device@2.0.2",
  "_hasShrinkwrap": false,
  "_id": "cordova-plugin-device@2.0.2",
  "_location": "/cordova-plugin-device",
  "_nodeVersion": "6.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/cordova-plugin-device_2.0.2_1523945189482_0.27753081894529075"
  },
  "_npmUser": {
    "name": "stevegill",
    "email": "stevengill97@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cordova-plugin-device@2.0.2",
    "scope": null,
    "escapedName": "cordova-plugin-device",
    "name": "cordova-plugin-device",
    "rawSpec": "2.0.2",
    "spec": "2.0.2",
    "type": "version"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/cordova-plugin-device/-/cordova-plugin-device-2.0.2.tgz",
  "_shasum": "fc08f3722e67eef7b6c67bfc99a83df6add0baba",
  "_shrinkwrap": null,
  "_spec": "cordova-plugin-device@2.0.2",
  "_where": "C:\\Users\\sonal\\Documents\\roshni\\BE project\\ionic\\myApp\\myApp",
  "author": {
    "name": "Apache Software Foundation"
  },
  "bugs": {
    "url": "https://issues.apache.org/jira/browse/CB"
  },
  "cordova": {
    "id": "cordova-plugin-device",
    "platforms": [
      "android",
      "ios",
      "windows",
      "browser",
      "osx"
    ]
  },
  "dependencies": {},
  "description": "Cordova Device Plugin",
  "devDependencies": {
    "eslint": "^3.19.0",
    "eslint-config-semistandard": "^11.0.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-plugin-import": "^2.3.0",
    "eslint-plugin-node": "^5.0.0",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-standard": "^3.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "fc08f3722e67eef7b6c67bfc99a83df6add0baba",
    "tarball": "https://registry.npmjs.org/cordova-plugin-device/-/cordova-plugin-device-2.0.2.tgz",
    "fileCount": 41,
    "unpackedSize": 191630,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa1Y7mCRA9TVsSAnZWagAA/JsP/RHF42hPQSqpa3FYSHKq\nPnGJ/LZYyDy0QV3TszYNjcop1AgdAo8lGM3gX2f1FRj5ZwCX75w8YhqUF6St\nHgtNWdJvpSvF9zusVdP280ww7FhRPX/B81HxJhj41kwrsHS2dmIfuk5QQUEN\nznKsduyjoFWuVDCkvz6gD+qjlOpiH8DE9iFng56l1ky5IOmUYRixXAxeZVGc\nqxED1bHBmb7mkOiRfd6ZSIDAcYVrmoFanXgHSj3WHvDeSV0CNn+9naLnP1ql\nX5XrKYGRVV4NEWZVbhu1yExDlyNHbVsiKlCh0WPTM7T13FwRL9J2/9GDslKI\n/ga9sVmHbkvrpXbIpAGbRnKMghn99vR7eAGrwLDNdagRA50uZMPR4G5oTgkh\nBPQXfG8sHam2JcORxTytNgpQ29yXlDx5R1QotLeFaWs6+mtJJeEOK397Jcr2\n3esJqtpHKXN643qKU2EN5QSFGyAjky9qs86mMZpkwbabqpAaehwLaZf/LQzr\nUbv7RNV7AW6BN00EcEvUtNUneHQdolsjqxYTfiG4+loqwBW54PxX+O2Y8PPj\nHeku2upoSsZTQXeiWJIfNZwbJMJccT+gTtx64gTtMO/PEaJvvGshc7/Xx+gn\nXFH1N9rRkSOj34np12o6gNbGIT2o8BeXVrOGv+wrPrl8vu93yraqKwcYx3Ok\nn5mm\r\n=2KcM\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "cordovaDependencies": {
      "3.0.0": {
        "cordova": ">100"
      }
    }
  },
  "homepage": "https://github.com/apache/cordova-plugin-device#readme",
  "keywords": [
    "cordova",
    "device",
    "ecosystem:cordova",
    "cordova-android",
    "cordova-ios",
    "cordova-windows",
    "cordova-browser",
    "cordova-osx"
  ],
  "license": "Apache-2.0",
  "maintainers": [
    {
      "name": "bowserj",
      "email": "bowserj@apache.org"
    },
    {
      "name": "csantanapr",
      "email": "csantana23@gmail.com"
    },
    {
      "name": "filmaj",
      "email": "maj.fil@gmail.com"
    },
    {
      "name": "jcesarmobile",
      "email": "jcesarmobile@gmail.com"
    },
    {
      "name": "macdonst",
      "email": "simon.macdonald@gmail.com"
    },
    {
      "name": "purplecabbage",
      "email": "purplecabbage@gmail.com"
    },
    {
      "name": "shazron",
      "email": "shazron@gmail.com"
    },
    {
      "name": "stevegill",
      "email": "stevengill97@gmail.com"
    }
  ],
  "name": "cordova-plugin-device",
  "optionalDependencies": {},
  "readme": "---\ntitle: Device\ndescription: Get device information.\n---\n<!--\n# license: Licensed to the Apache Software Foundation (ASF) under one\n#         or more contributor license agreements.  See the NOTICE file\n#         distributed with this work for additional information\n#         regarding copyright ownership.  The ASF licenses this file\n#         to you under the Apache License, Version 2.0 (the\n#         \"License\"); you may not use this file except in compliance\n#         with the License.  You may obtain a copy of the License at\n#\n#           http://www.apache.org/licenses/LICENSE-2.0\n#\n#         Unless required by applicable law or agreed to in writing,\n#         software distributed under the License is distributed on an\n#         \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#         KIND, either express or implied.  See the License for the\n#         specific language governing permissions and limitations\n#         under the License.\n-->\n\n|AppVeyor|Travis CI|\n|:-:|:-:|\n|[![Build status](https://ci.appveyor.com/api/projects/status/github/apache/cordova-plugin-device?branch=master)](https://ci.appveyor.com/project/ApacheSoftwareFoundation/cordova-plugin-device)|[![Build Status](https://travis-ci.org/apache/cordova-plugin-device.svg?branch=master)](https://travis-ci.org/apache/cordova-plugin-device)|\n\n# cordova-plugin-device\n\nThis plugin defines a global `device` object, which describes the device's hardware and software.\nAlthough the object is in the global scope, it is not available until after the `deviceready` event.\n\n```js\ndocument.addEventListener(\"deviceready\", onDeviceReady, false);\nfunction onDeviceReady() {\n    console.log(device.cordova);\n}\n```\n\nReport issues with this plugin on the [Apache Cordova issue tracker](https://issues.apache.org/jira/issues/?jql=project%20%3D%20CB%20AND%20status%20in%20%28Open%2C%20%22In%20Progress%22%2C%20Reopened%29%20AND%20resolution%20%3D%20Unresolved%20AND%20component%20%3D%20%22Plugin%20Device%22%20ORDER%20BY%20priority%20DESC%2C%20summary%20ASC%2C%20updatedDate%20DESC)\n\n\n## Installation\n\n    cordova plugin add cordova-plugin-device\n\n## Properties\n\n- device.cordova\n- device.model\n- device.platform\n- device.uuid\n- device.version\n- device.manufacturer\n- device.isVirtual\n- device.serial\n\n## device.cordova\n\nGet the version of Cordova running on the device.\n\n### Supported Platforms\n\n- Android\n- Browser\n- iOS\n- Windows\n- OSX\n\n## device.model\n\nThe `device.model` returns the name of the device's model or\nproduct. The value is set by the device manufacturer and may be\ndifferent across versions of the same product.\n\n### Supported Platforms\n\n- Android\n- Browser\n- iOS\n- Windows\n- OSX\n\n### Quick Example\n\n```js\n// Android:    Nexus One       returns \"Passion\" (Nexus One code name)\n//             Motorola Droid  returns \"voles\"\n// BlackBerry: Torch 9800      returns \"9800\"\n// Browser:    Google Chrome   returns \"Chrome\"\n//             Safari          returns \"Safari\"\n// iOS:     for the iPad Mini, returns iPad2,5; iPhone 5 is iPhone 5,1. See http://theiphonewiki.com/wiki/index.php?title=Models\n// OSX:                        returns \"x86_64\"\n//\nvar model = device.model;\n```\n\n### Android Quirks\n\n- Gets the [product name](http://developer.android.com/reference/android/os/Build.html#PRODUCT) instead of the [model name](http://developer.android.com/reference/android/os/Build.html#MODEL), which is often the production code name. For example, the Nexus One returns `Passion`, and Motorola Droid returns `voles`.\n\n## device.platform\n\nGet the device's operating system name.\n\n```js\nvar string = device.platform;\n```\n### Supported Platforms\n\n- Android\n- Browser\n- iOS\n- Windows\n- OSX\n\n### Quick Example\n\n```js\n// Depending on the device, a few examples are:\n//   - \"Android\"\n//   - \"BlackBerry 10\"\n//   - \"browser\"\n//   - \"iOS\"\n//   - \"WinCE\"\n//   - \"Tizen\"\n//   - \"Mac OS X\"\nvar devicePlatform = device.platform;\n```\n\n## device.uuid\n\nGet the device's Universally Unique Identifier ([UUID](http://en.wikipedia.org/wiki/Universally_Unique_Identifier)).\n\n```js\nvar string = device.uuid;\n```\n\n### Description\n\nThe details of how a UUID is generated are determined by the device manufacturer and are specific to the device's platform or model.\n\n### Supported Platforms\n\n- Android\n- iOS\n- Windows\n- OSX\n\n### Quick Example\n\n```js\n// Android: Returns a random 64-bit integer (as a string, again!)\n//          The integer is generated on the device's first boot\n//\n// BlackBerry: Returns the PIN number of the device\n//             This is a nine-digit unique integer (as a string, though!)\n//\n// iPhone: (Paraphrased from the UIDevice Class documentation)\n//         Returns the [UIDevice identifierForVendor] UUID which is unique and the same for all apps installed by the same vendor. However the UUID can be different if the user deletes all apps from the vendor and then reinstalls it.\n// Windows Phone 7 : Returns a hash of device+current user,\n// if the user is not defined, a guid is generated and will persist until the app is uninstalled\n// Tizen: returns the device IMEI (International Mobile Equipment Identity or IMEI is a number\n// unique to every GSM and UMTS mobile phone.\nvar deviceID = device.uuid;\n```\n\n### iOS Quirk\n\nThe `uuid` on iOS uses the identifierForVendor property. It is unique to the device across the same vendor, but will be different for different vendors and will change if all apps from the vendor are deleted and then reinstalled.\nRefer [here](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIDevice_Class/#//apple_ref/occ/instp/UIDevice/identifierForVendor) for details.\nThe UUID will be the same if app is restored from a backup or iCloud as it is saved in preferences. Users using older versions of this plugin will still receive the same previous UUID generated by another means as it will be retrieved from preferences.\n\n### OSX Quirk\n\nThe `uuid` on OSX is generated automatically if it does not exist yet and is stored in the `standardUserDefaults` in the `CDVUUID` property.\n\n## device.version\n\nGet the operating system version.\n\n    var string = device.version;\n\n### Supported Platforms\n\n- Android 2.1+\n- Browser\n- iOS\n- Windows\n- OSX\n\n### Quick Example\n\n```js\n// Android:    Froyo OS would return \"2.2\"\n//             Eclair OS would return \"2.1\", \"2.0.1\", or \"2.0\"\n//             Version can also return update level \"2.1-update1\"\n//\n// BlackBerry: Torch 9800 using OS 6.0 would return \"6.0.0.600\"\n//\n// Browser:    Returns version number for the browser\n//\n// iPhone:     iOS 3.2 returns \"3.2\"\n//\n// Windows Phone 7: returns current OS version number, ex. on Mango returns 7.10.7720\n// Windows 8: return the current OS version, ex on Windows 8.1 returns 6.3.9600.16384\n// Tizen: returns \"TIZEN_20120425_2\"\n// OSX:        El Capitan would return \"10.11.2\"\n//\nvar deviceVersion = device.version;\n```\n\n## device.manufacturer\n\nGet the device's manufacturer.\n\n    var string = device.manufacturer;\n\n### Supported Platforms\n\n- Android\n- iOS\n- Windows\n\n### Quick Example\n\n```js\n// Android:    Motorola XT1032 would return \"motorola\"\n// BlackBerry: returns \"BlackBerry\"\n// iPhone:     returns \"Apple\"\n//\nvar deviceManufacturer = device.manufacturer;\n```\n\n## device.isVirtual\n\nwhether the device is running on a simulator.\n\n```js\nvar isSim = device.isVirtual;\n```\n\n### Supported Platforms\n\n- Android 2.1+\n- Browser\n- iOS\n- Windows\n- OSX\n\n### OSX and Browser Quirk\n\nThe `isVirtual` property on OS X and Browser always returns false.\n\n## device.serial\n\nGet the device hardware serial number ([SERIAL](http://developer.android.com/reference/android/os/Build.html#SERIAL)).\n\n```js\nvar string = device.serial;\n```\n\n### Supported Platforms\n\n- Android\n- OSX\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apache/cordova-plugin-device.git"
  },
  "scripts": {
    "eslint": "node node_modules/eslint/bin/eslint www && node node_modules/eslint/bin/eslint src && node node_modules/eslint/bin/eslint tests",
    "test": "npm run eslint"
  },
  "types": "./types/index.d.ts",
  "version": "2.0.2"
}
